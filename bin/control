#!/usr/bin/env bash

source "${OPENSHIFT_OCAML_CORE_DIR}usr/src/common.sh"

declare progname="${0}"

function usage() {
    echo "Usage: ${progname} [build|start|stop|restart|status|tidy|*]"
}

function run_hook() {
    local path="${OPENSHIFT_REPO_DIR}.openshift/action_hooks/${1}"
    if [ -f "${path}" -a -x "${path}" ]; then
        "${path}"
    else
        return 0
    fi
}

for hookname in start stop status; do
    eval "function ${hookname}() { run_hook  \"\${FUNCNAME}\"; }"
done

function restart() {
    stop
    start
}

function tidy() {
    client_message "Deleting OCaml log"
    rm -rf "${logfile}"
    run_hook "${FUNCNAME}"
}

function build() {
    "${OPENSHIFT_OCAML_CORE_DIR}bin/build-compiler"
    ( cd "${OPENSHIFT_REPO_DIR}"
        eval $( opam config env )
        if [ -f _oasis ]; then
            oasis setup
        fi
        declare pkgname=$( sed -n 's/name:\s*"\?\([^"]*\)"\?/\1/p' opam | head -1 )
        if [ -d "${OPAMROOT}/${OCAMLVERSION}/packages.dev/${pkgname}" ]; then
            opam upgrade "${pkgname}" -y |& tee -a "${logfile}"
        else
            opam pin add "${pkgname}" . -y |& tee -a "${logfile}"
        fi
    )
}

function ignore_hook() {
    echo "Skipping unused hook ${1}"
}

if [ $# -ne 1 ]; then
    usage >&2
    exit 1
fi

# Handle commands.
case "${1}" in
    build|start|stop|restart|status|tidy)
        "${1}";;
    *) ignore_hook "${1}";;
esac
